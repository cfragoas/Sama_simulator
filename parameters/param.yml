exec_param:
  threads: 8 # if 0 - uses the maximum number of threads - 1
  max_iter: 200  # number of iterations (repetitions/batches) - must be more than batch_iter todo - fix this in outside code
  batch_size: 20 # number of iterations per batch - must be less than max_iter
  hypothesis_test: True  # True if you want to use Mann_Whitney U test to evaluate the distribution and stop the simulation
  hypothesis_test_var: avg_latency  # variable that will be used if hypothesis_test = True
  plot_curves: True
  plot_surf: True
  plot_hist: True
  backup_data: True
  output_type: 'complete'  # complete or simple or raw



roi_param:
  # ============================ if grid and map == True, the applications will use grid ===============================
  # ==================================================== grid param ====================================================

  grid: True
  grid_lines: 500
  grid_columns: 500
  cel_size: 30

  # ================================================= end grid param  =================================================
  # ==================================================================================================================

  map: False
  name_map: '30m.pkl'  # map format made for this application - options: 30m.pkl, 50m.pkl and 100m.pkl
  filter_type: 'Nm_Bairro'
  filter_name: 'Tijuca'

  # ==================================================================================================================

  # WARNING - below, you can only iterate for a range of samples or a range of BS number
  # if you want to iterate over one, leave the other with the step equals 0 to use only the minimum number !!!

macel_param:
  # ================================================ UE Distribution ================================================
  ue_dist_typ: 'uniform'  # options: 'gaussian' or 'uniform' sampling - if map is selected, only uniform dist can be used
  samples_min: 1000  # minimum number of samples per distribution
  samples_max: 10000  # maximum number of samples per distribution
  samples_step: 0  # the step to iterate between samples_min and samples_max -> leave with 0 or empty to not iterate (will use the minium vale)
  # ==================================== if the distribution sampling is GAUSSIAN ====================================
  n_centers: 4  # number of distributions to be summed (gaussian/etc) --> samples per dist = n_samples * n_centers
  center_distribution: 'cluster' # 'uniform' or 'cluster' for the  centers distribution
  # ==================================================================================================================

  # ============================================== BS location allocation ==============================================
  bs_allocation_typ: 'cluster'  # can be 'random', 'cluster' or 'file'
  bs_location_file_name: 'bs_coord.csv'  # only if bs_allocation_typ is 'file' - besides, can be left blank -- the file is located inside the input folder
  # ==================================== if bs_allocation_typ is RANDOM or CLUSTER ====================================
  min_bs: 1  # minimum number of BSs to be simulated
  max_bs: 2  # maximum number of BSs to be simulated
  bs_step: 1  # the step to iterate between min_bs and max_bs -> leave with empty or 0 to not iterate (will use the minium vale)
  # ===================================================================================================================

  time_slots: 1000  # number of time slots (1 ms)
  time_slot_lngt: 1  # duration of a time slot (ms)
  uplink: True  # if True: simulates downlink comm.
  downlink: True  # if True: simulates uplink comm.
  mux_tdd_up_time: 0.5  # percentage (between 0 and 1) of time used for the uplink when using TDD

  # ==================================== Propagation Models ==========================================================
  prop_model: 'WINNER2 C2' # Available path loss models for simulation : free space, 3GPP UMA, 3GPP UMA O2I, WINNER2 C2, WINNER2 C4
  # =================================================================================================================

downlink_scheduler:  # scheduler specifications for the downlink side
  criteria:   # Mbps - if empty, does not use the capacity criteria
  scheduler_typ: 'PF'  # RR (round-robin), prop-cmp (proposed complete), prop-smp (p roposed simplified) or BCQI (Best Channel Quality Indicator)
  bw_slot: 1  # slot fixed bandwidth for scheduler with a queue (RR)
  t_min: 10  # minimum allocated time for an execution time = time_slots

uplink_scheduler:  # scheduler specifications for the uplink side
  criteria:   # Mbps - if empty, does not use the capacity criteria
  scheduler_typ: 'PF'  # RR (round-robin), prop-cmp (proposed complete), prop-smp (proposed simplified) or BCQI (Best Channel Quality Indicator)
  bw_slot: 1  # slot fixed bandwidth for scheduler with a queue (RR)
  t_min: 10  # minimum allocated time for an execution time = time_slots




antenna_param:  # -- refer to ITU 2101 --
  # antenna element parameters
  max_element_gain: 5
  phi_3db: 65
  theta_3db: 65
  front_back_h: 30
  sla_v: 30
  # antenna array parameters
  frequency: 10  # not used
  n_rows: 4
  n_columns: 4
  horizontal_spacing: 0.5
  vertical_spacing: 0.5



bs_param:
  freq: 3.5  # frequency (GHz)
  htx: 30
  tx_power: 20  # transmission power (dBW) - 100W (20 dBW), 80W (19dBW), 60W (17.8 dBW), 40W (16 dBW)
  bw: 300  # bw for n sectors (to be fixed)
  n_sectors: 3
  gain: 10  # not used
  downtilt: 0
  n_beams: 10

ue_param:
  hrx: 1.5
  tx_power: -4 # dBW
# https://www.linkedin.com/pulse/nr-ue-power-classes-cesar-nunes/?originalSubdomain=pt